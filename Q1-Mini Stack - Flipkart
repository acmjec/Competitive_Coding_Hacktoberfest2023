#include <iostream>
#include <stack>

class MinStack {
private:
    std::stack<int> mainStack;
    std::stack<int> minStack;

public:
    MinStack() {
    }
    
    void push(int val) {
        mainStack.push(val);
        if (minStack.empty() || val <= minStack.top()) {
            minStack.push(val);
        }
    }
    
    void pop() {
        if (mainStack.top() == minStack.top()) {
            minStack.pop();
        }
        mainStack.pop();
    }
    
    int top() {
        return mainStack.top();
    }
    
    int getMin() {
        return minStack.top();
    }
};

int main() {
    MinStack minStack;
    minStack.push(-2);
    minStack.push(0);
    minStack.push(-3);
    
    std::cout << "Minimum element: " << minStack.getMin() << std::endl; // Output: -3
    
    minStack.pop();
    std::cout << "Top element: " << minStack.top() << std::endl; // Output: 0
    
    std::cout << "Minimum element: " << minStack.getMin() << std::endl; // Output: -2
    
    return 0;
}
